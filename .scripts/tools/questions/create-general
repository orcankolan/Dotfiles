#!/bin/bash

#generate array of begin line numbers:

#two dimensional arrays (first dimension is file, second is position)
declare -Ag begin_arrays
declare -Ag end_arrays
declare -g qneed=40

#quesbook folder location:
#declare -g qbl=~/supplement/test-questions/quesbook
declare -g qbl=~/online-edu/vt/quesbook

#questions folder location:
declare -g ql=$qbl/questions/$1

#unified questions folder location:
declare -g uqf=$ql/general/unified

#file size in general directory:
declare -g file_num=$(find $uqf -type f -name 'u_*.tex' | wc -l)
printf "Total general quesiton files: %s\n" "$((file_num))"


first_round(){
	python3 -c "from decimal import Decimal, ROUND_HALF_UP, ROUND_HALF_DOWN, ROUND_DOWN;number=Decimal('$1');rounded = number.quantize(Decimal('0.1'), rounding='ROUND_HALF_DOWN');print(rounded)"
}

second_round(){
	python3 -c "from decimal import Decimal, ROUND_HALF_UP, ROUND_HALF_DOWN, ROUND_DOWN;number=Decimal('$1');rounded = number.quantize(Decimal('1'), rounding='ROUND_HALF_DOWN');print(rounded)"
}

list_begins () {
	echo "Listing Begin Positions:"
	i=1
	for file in $(find $uqf -type f -name 'u_*.tex' | sort)
	do
		declare -g "begin_array_$i=( $(grep -n 'begin.question' $file | cut -d: -f 1) )"
		var="begin_array_$i"
		t=${!var}
		echo $t	
		i=$((i+1))
	done
}

list_ends () {
	echo "Listing End Positions:"
	i=1
	for file in $(find $uqf -type f -name 'u_*.tex' | sort)
	do
		declare -g "end_array_$i=( $(grep -n 'end.solution' $file | cut -d: -f 1) )"
		var="end_array_$i"
		t=${!var}
		echo $t	
		i=$((i+1))
	done
}

create_begins () {
	i=0
	for file in $(find $uqf -type f -name 'u_*.tex' | sort)
	do
		j=0
		for value in $(grep -n 'begin.question' $file | cut -d: -f 1)
		do	
			begin_arrays[$i,$j]=$value
			j=$((j+1))
		done

		i=$((i+1))
	done
	}

create_ends () {
	i=0
	for file in $(find $uqf -type f -name 'u_*.tex' | sort)
	do
		j=0
		for value in $(grep -n 'end.solution' $file | cut -d: -f 1)
		do	
			end_arrays[$i,$j]=$value
			j=$((j+1))
		done

		i=$((i+1))
	done
	}

#list_begins
#list_ends

create_begins
create_ends
echo "Total questions for general is: ${#begin_arrays[@]}"

declare -g output=$uqf/general-questions.tex
if [ -f $output ]; then
   echo "File $output exists.So removing it for the new one..."
   rm $output
else
   echo "File $output does not exist. Creating new one..."
   touch $output
fi


gen_ques_size() {
	total_need=0
	for file in $(find $uqf -type f -name 'u_*.tex' | sort)
	do
		file_size=$( qsize $file | cut -d: -f 2 )

		temp_array=( $(for ((k=0;k<$((file_size));k+=1)); do echo ${k}; done) )		
		shuff_array=( $(shuf -e "${temp_array[@]}") )
		
		needed_float=$( echo "print($file_size*$qneed/$total_questions)" | python3 )
		needed_tmp=$( first_round $needed_float )
		needed=$( second_round $needed_tmp )
		total_need=$((total_need+needed))
	done
	echo "$total_need"
}

create_questions () {

	declare -g total_questions=${#begin_arrays[@]}
	
	created_question_size=$( gen_ques_size )
	diff_questions=$((qneed-created_question_size))
	qfiles_array=( $(for ((k=0;k<$((file_num));k+=1)); do echo ${k}; done) )
	shuff_qfiles_array=( $(shuf -e "${qfiles_array[@]}") )
	echo ${shuff_qfiles_array[@]}
	echo "difference between generated and needed: $diff_questions"

	i=0
	for file in $(find $uqf -type f -name 'u_*.tex' | sort)
	do
		echo "Processed file is: $file"

		file_size=$( qsize $file | cut -d: -f 2 )
		echo "File size is: $file_size"

		temp_array=( $(for ((k=0;k<$((file_size));k+=1)); do echo ${k}; done) )		
		shuff_array=( $(shuf -e "${temp_array[@]}") )
		echo "shuffled array of this file is : ${shuff_array[*]}"		
		
		needed_float=$( echo "print($file_size*$qneed/$total_questions)" | python3 )
		needed_tmp=$( first_round $needed_float )
		needed=$( second_round $needed_tmp )

		rnd_bin=$((RANDOM%2))

		echo "Needed questions (weighed over total) is: $needed"

		if [ $diff_questions -gt 0 ];then
			if [ $rnd_bin -eq 1 ]; then
				for (( j=0 ; j<$((needed+1)) ; j++ )); do
				
					begin=${begin_arrays[$i,${shuff_array[$j]}]}
					end=${end_arrays[$i,${shuff_array[$j]}]} 
					sed -n "${begin},${end}p" $file >> $output
				done
			diff_questions=$((diff_questions-1))

			else
				for (( j=0 ; j<$((needed)) ; j++ )); do
				
					begin=${begin_arrays[$i,${shuff_array[$j]}]}
					end=${end_arrays[$i,${shuff_array[$j]}]} 
					sed -n "${begin},${end}p" $file >> $output
				done
			fi

		i=$((i+1))
		continue
		fi

		if [ $diff_questions -lt 0 ];then
			if [ $rnd_bin -eq 1 ]; then
				for (( j=0 ; j<$((needed-1)) ; j++ )); do
				
					begin=${begin_arrays[$i,${shuff_array[$j]}]}
					end=${end_arrays[$i,${shuff_array[$j]}]} 
					sed -n "${begin},${end}p" $file >> $output
				done
			diff_questions=$((diff_questions+1))

			else
				for (( j=0 ; j<$((needed)) ; j++ )); do
				
					begin=${begin_arrays[$i,${shuff_array[$j]}]}
					end=${end_arrays[$i,${shuff_array[$j]}]} 
					sed -n "${begin},${end}p" $file >> $output
				done
			fi
		i=$((i+1))
		continue
		fi

		if [ $diff_questions -eq 0 ];then
			for (( j=0 ; j<$((needed)) ; j++ )); do
				
				begin=${begin_arrays[$i,${shuff_array[$j]}]}
				end=${end_arrays[$i,${shuff_array[$j]}]} 
				sed -n "${begin},${end}p" $file >> $output
			done
		fi

		i=$((i+1))
	done
}

create_questions

echo >> $output
echo "%%% Local Variables:" >> $output
echo "%%% mode: latex" >> $output
echo "%%% TeX-master: \"ndtbook\"" >> $output
echo "%%% End:" >> $output

cp $output $qbl/genel/test/


